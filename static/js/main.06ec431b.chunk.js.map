{"version":3,"sources":["App/ToDoApp.jsx","index.jsx"],"names":["ToDoListApp","state","ToDoPrimary","ToDoSecondary","ToDoListArray","open","index","HandleChange","e","setState","target","name","value","HandleClick","HandleEdit","HandleUpdate","HandleClose","HandleClear","HandleShiftUp","temp","HandleShiftDown","HandleDelete","splice","response","this","map","todo","key","className","onClick","type","placeholder","onChange","onClose","classNames","modal","overlay","center","Component","ReactDOM","render","document","getElementById"],"mappings":"mTAmKeA,G,8NA5JbC,MAAQ,CACNC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,MAAM,EACNC,MAAO,M,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,YAAc,WACZ,EAAKJ,SAAS,CACZL,cAAc,GAAD,mBAAM,EAAKH,MAAMG,eAAjB,CAAgC,EAAKH,MAAMC,cACxDA,YAAa,M,EAIjBY,WAAa,SAACR,GACZ,EAAKG,SAAS,CACZJ,MAAM,EACNC,MAAOA,K,EAIXS,aAAe,WACb,IAAIX,EAAgB,EAAKH,MAAMG,cAE/BA,EADY,EAAKH,MAAMK,OACA,EAAKL,MAAME,cAClC,EAAKM,SAAS,CACZL,cAAeA,EACfC,MAAM,K,EAIVW,YAAc,WACZ,EAAKP,SAAS,CACZJ,MAAM,K,EAIVY,YAAc,WACZ,EAAKR,SAAS,CACZP,YAAa,GACbE,cAAe,M,EAInBc,cAAgB,SAACZ,GACf,IAAIF,EAAgB,EAAKH,MAAMG,cAC3Be,EAAOf,EAAcE,GACzBF,EAAcE,GAASF,EAAcE,EAAQ,GAC7CF,EAAcE,EAAQ,GAAKa,EAC3B,EAAKV,SAAS,CACZL,cAAeA,K,EAInBgB,gBAAkB,SAACd,GACjB,IAAIF,EAAgB,EAAKH,MAAMG,cAC3Be,EAAOf,EAAcE,GACzBF,EAAcE,GAASF,EAAcE,EAAQ,GAC7CF,EAAcE,EAAQ,GAAKa,EAC3B,EAAKV,SAAS,CACZL,cAAeA,K,EAInBiB,aAAe,SAACf,GACd,IAAIF,EAAgB,EAAKH,MAAMG,cAC/BA,EAAckB,OAAOhB,EAAO,GAC5B,EAAKG,SAAS,CACZL,cAAeA,K,uDAIT,IAAD,OACHmB,EAAWC,KAAKvB,MAAMG,cAAcqB,KAAI,SAACC,EAAMpB,GACjD,OACE,wBAAIqB,IAAKrB,GACP,6BACG,IACD,iCAFF,IAEoB,+BAAKoB,EAAL,KAAgB,KAEpC,6BACE,4BAAQE,UAAU,WAAWC,QAAS,kBAAM,EAAKf,WAAWR,KAC1D,uBAAGsB,UAAU,gBAEf,4BACEA,UAAU,eACVC,QAAS,kBAAM,EAAKX,cAAcZ,KAElC,uBAAGsB,UAAU,uBAEf,4BACEA,UAAU,iBACVC,QAAS,kBAAM,EAAKT,gBAAgBd,KAEpC,uBAAGsB,UAAU,yBAEf,4BACEA,UAAU,aACVC,QAAS,kBAAM,EAAKR,aAAaf,KAEjC,uBAAGsB,UAAU,sBACL,SAKlB,OACE,oCACA,yBAAKA,UAAU,eACb,gCACG,IACD,gCACE,uBAAGA,UAAU,mBACL,IACV,yCAAmB,IACnB,4BAAQA,UAAU,WAAWC,QAASL,KAAKP,aACzC,uBAAGW,UAAU,qBACL,KAEZ,4BAAKL,GACL,gCACE,2BACEO,KAAK,OACLnB,KAAK,cACLoB,YAAY,aACZC,SAAUR,KAAKjB,aACfK,MAAOY,KAAKvB,MAAMC,cAEpB,4BAAQ2B,QAASL,KAAKX,aACpB,uBAAGe,UAAU,0BAIjB,kBAAC,QAAD,CAAOvB,KAAMmB,KAAKvB,MAAMI,KAAM4B,QAAST,KAAKR,YAAakB,WAAY,CAAEC,MAAO,cAAeC,QAAS,iBAAmBC,QAAM,GAC7H,2BACEP,KAAK,OACLnB,KAAK,gBACLC,MAAOY,KAAKvB,MAAMG,cAAcoB,KAAKvB,MAAMK,OAC3C0B,SAAUR,KAAKjB,eAEjB,4BAAQqB,UAAU,aAAaC,QAASL,KAAKT,cAA7C,gB,GApJgBuB,cCF1BC,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,W","file":"static/js/main.06ec431b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Modal} from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport \"./ToDoApp.css\";\r\nimport \"./responsive_style.css\";\r\n\r\nclass ToDoListApp extends Component {\r\n  state = {\r\n    ToDoPrimary: \"\",\r\n    ToDoSecondary: \"\",\r\n    ToDoListArray: [],\r\n    open: false,\r\n    index: null,\r\n  };\r\n\r\n  HandleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  HandleClick = () => {\r\n    this.setState({\r\n      ToDoListArray: [...this.state.ToDoListArray, this.state.ToDoPrimary],\r\n      ToDoPrimary: \"\",\r\n    });\r\n  };\r\n\r\n  HandleEdit = (index) => {\r\n    this.setState({\r\n      open: true,\r\n      index: index,\r\n    });\r\n  };\r\n\r\n  HandleUpdate = () => {\r\n    let ToDoListArray = this.state.ToDoListArray;\r\n    let index = this.state.index;\r\n    ToDoListArray[index] = this.state.ToDoSecondary;\r\n    this.setState({\r\n      ToDoListArray: ToDoListArray,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  HandleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  HandleClear = () => {\r\n    this.setState({\r\n      ToDoPrimary: \"\",\r\n      ToDoListArray: [],\r\n    });\r\n  };\r\n\r\n  HandleShiftUp = (index) => {\r\n    let ToDoListArray = this.state.ToDoListArray;\r\n    let temp = ToDoListArray[index];\r\n    ToDoListArray[index] = ToDoListArray[index - 1];\r\n    ToDoListArray[index - 1] = temp;\r\n    this.setState({\r\n      ToDoListArray: ToDoListArray,\r\n    });\r\n  };\r\n\r\n  HandleShiftDown = (index) => {\r\n    let ToDoListArray = this.state.ToDoListArray;\r\n    let temp = ToDoListArray[index];\r\n    ToDoListArray[index] = ToDoListArray[index + 1];\r\n    ToDoListArray[index + 1] = temp;\r\n    this.setState({\r\n      ToDoListArray: ToDoListArray,\r\n    });\r\n  };\r\n\r\n  HandleDelete = (index) => {\r\n    let ToDoListArray = this.state.ToDoListArray;\r\n    ToDoListArray.splice(index, 1);\r\n    this.setState({\r\n      ToDoListArray: ToDoListArray,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let response = this.state.ToDoListArray.map((todo, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <div>\r\n            {\" \"}\r\n            <button></button> <p> {todo} </p>{\" \"}\r\n          </div>\r\n          <div>\r\n            <button className=\"edit-btn\" onClick={() => this.HandleEdit(index)}>\r\n              <i className=\"fas fa-pen\"></i>\r\n            </button>\r\n            <button\r\n              className=\"shift-up-btn\"\r\n              onClick={() => this.HandleShiftUp(index)}\r\n            >\r\n              <i className=\"fas fa-chevron-up\"></i>\r\n            </button>\r\n            <button\r\n              className=\"shift-down-btn\"\r\n              onClick={() => this.HandleShiftDown(index)}\r\n            >\r\n              <i className=\"fas fa-chevron-down\"></i>\r\n            </button>\r\n            <button\r\n              className=\"delete-btn\"\r\n              onClick={() => this.HandleDelete(index)}\r\n            >\r\n              <i className=\"far fa-trash-alt\"></i>\r\n            </button>{\" \"}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n      <div className=\"ToDoListApp\">\r\n        <header>\r\n          {\" \"}\r\n          <button>\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>{\" \"}\r\n          <h1>All Tasks</h1>{\" \"}\r\n          <button className=\"sync-btn\" onClick={this.HandleClear}>\r\n            <i className=\"fas fa-sync-alt\"></i>\r\n          </button>{\" \"}\r\n        </header>\r\n        <ul>{response}</ul>\r\n        <footer>\r\n          <input\r\n            type=\"text\"\r\n            name=\"ToDoPrimary\"\r\n            placeholder=\"Enter Todo\"\r\n            onChange={this.HandleChange}\r\n            value={this.state.ToDoPrimary}\r\n          />\r\n          <button onClick={this.HandleClick}>\r\n            <i className=\"fas fa-plus-circle\"></i>\r\n          </button>\r\n        </footer>\r\n      </div>\r\n        <Modal open={this.state.open} onClose={this.HandleClose} classNames={{ modal: 'customModal', overlay: 'customOverlay',}} center>\r\n          <input\r\n            type=\"text\"\r\n            name=\"ToDoSecondary\"\r\n            value={this.state.ToDoListArray[this.state.index]}\r\n            onChange={this.HandleChange}\r\n          />\r\n          <button className=\"update-btn\" onClick={this.HandleUpdate}>\r\n            Update\r\n          </button>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoListApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ToDoListApp from \"./App/ToDoApp.jsx\";\r\n\r\nReactDOM.render(<ToDoListApp />, document.getElementById(\"root\"));"],"sourceRoot":""}